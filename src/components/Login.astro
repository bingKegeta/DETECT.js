<div class="max-w-xl m-auto p-6 bg-base-200 rounded-lg shadow-lg border-4 border-primary">
  <p class="text-center text-base-content text-2xl font-medium mb-5">Login</p>
  <form onsubmit="handleLogin(event)">
    <label class="block mb-2 text-sm font-medium text-base-content">Email</label>
    <div class="flex">
      <span class="inline-flex items-center px-2 text-sm text-base-content bg-base-200 border border-r-0 border-base-300 rounded-l-md">
        <svg class="w-5 h-5 text-neutral-content" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
          <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"></path>
          <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"></path>
        </svg>
      </span>
      <input type="email" name="email" class="rounded-none rounded-r-lg bg-base-100 border text-base-content focus:ring-primary focus:border-primary block flex-1 min-w-0 w-full text-sm border-base-300 p-2.5" placeholder="man@human.com" required />
    </div>
    <div class="email-error text-error text-xs mb-5 mt-1"></div>

    <label class="block mb-2 text-sm font-medium text-base-content">Password</label>
    <div class="relative">
      <input type="password" id="login-password" name="password" class="rounded-none rounded-r-lg bg-base-100 border text-base-content focus:ring-primary focus:border-primary block flex-1 min-w-0 w-full text-sm border-base-300 p-2.5" required />
    </div>
    <div class="flex items-center mt-2">
      <input type="checkbox" id="show-password-login" class="mr-2" onclick="togglePasswordVisibility('login-password', 'show-password-login')" />
      <label for="show-password-login" class="text-sm text-base-content">Show Password</label>
    </div>
    <div class="pw-error text-error text-xs mb-5 mt-1"></div>

    <button type="submit" class="mt-4 w-full bg-primary text-base-100 py-2 rounded-lg">Login</button>
    <p class="text-center text-base-content pt-4">Not registered yet? <a href="#" class="text-info font-medium inline-flex space-x-1 items-center hover:underline"><span>Register now</span></a></p>
  </form>
  <div class="p-2 m-4 relative">
    <div class="absolute inset-0 bg-gradient-to-r from-transparent via-base-300 to-transparent h-px"></div>
  </div>
  <div class="my-5">
    <button onclick="window.location.href='http://localhost:8080/auth/google'" class="w-full text-center py-3 my-3 border flex space-x-2 items-center justify-center bg-neutral rounded-lg text-neutral-content hover:border-info hover:shadow transition duration-150">
      <img src="https://www.svgrepo.com/show/355037/google.svg" class="w-6 h-6" alt="" />
      <span>Login with Google</span>
    </button>
  </div>
</div>

<script is:inline>
function handleLogin(event) {
  event.preventDefault();
  const form = event.target;
  const email = form.email.value;
  const password = form.password.value;

  fetch("http://localhost:8080/login", {  // <-- Change this URL
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify({ email, password }),
  })
    .then(async (response) => {
      const contentType = response.headers.get("content-type");

      if (!response.ok) {
        if (contentType && contentType.includes("application/json")) {
          const errorData = await response.json();
          throw new Error(errorData.error || "Login failed");
        } else {
          throw new Error("Unexpected server response. Check the backend logs.");
        }
      }

      return response.json();
    })
    .then((data) => {
      localStorage.setItem("token", data.token);
      alert("Login successful");
      window.location.href = "/dashboard";
    })
    .catch((error) => {
      alert(error.message);
    });
}


  function togglePasswordVisibility(passwordFieldId, checkboxId) {
    const passwordField = document.getElementById(passwordFieldId);
    const checkbox = document.getElementById(checkboxId);
    if (passwordField && checkbox) {
      passwordField.type = checkbox.checked ? "text" : "password";
    }
  }
</script>



<script>
  import { actions, isInputError } from "astro:actions";

  const form = document.querySelector("form");
  form?.addEventListener("submit", async (event) => {
    event.preventDefault();
    const formData = new FormData(form);
    const { error, data } = await actions.login(formData);
    if (!isInputError(error)) {
      if (data?.success) {
        console.log("Logged in successfully", data.data);
        const emailErrorElement = document.querySelector(".email-error");
        if (emailErrorElement) {
          emailErrorElement.textContent = "";
        }
        const passwordErrorElement = document.querySelector(".pw-error");
        if (passwordErrorElement) {
          passwordErrorElement.textContent = "";
        }
        // window.location.href = "/dashboard";
      } else {
        const emailErrorElement = document.querySelector(".email-error");
        if (emailErrorElement) {
          emailErrorElement.textContent = data?.message || "";
        }
      }
    } else {
      if (error.fields?.email) {
        const emailErrorElement = document.querySelector(".email-error");
        if (emailErrorElement) {
          emailErrorElement.textContent = error.fields.email.join(", ");
        }
      } else {
        const emailErrorElement = document.querySelector(".email-error");
        if (emailErrorElement) {
          emailErrorElement.textContent = "";
        }
      }

      if (error.fields?.password) {
        const passwordErrorElement = document.querySelector(".pw-error");
        if (passwordErrorElement) {
          passwordErrorElement.textContent = error.fields.password.join(", ");
        }
      } else {
        const passwordErrorElement = document.querySelector(".pw-error");
        if (passwordErrorElement) {
          passwordErrorElement.textContent = "";
        }
      }
    }
  });
</script>
