<div
  class="max-w-xl m-auto p-6 bg-base-200 rounded-lg shadow-lg border-4 border-primary"
>
  <form>
    <!-- Email Input Group -->
    <label class="block mb-2 text-sm font-medium text-base-content">
      Your Email
    </label>
    <div class="flex relative">
      <span
        class="inline-flex items-center px-2 text-sm text-base-content bg-base-200 border border-r-0 border-base-300 rounded-l-md"
      >
        <svg
          class="w-5 h-5 text-neutral-content"
          fill="currentColor"
          viewBox="0 0 20 20"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"
          ></path>
          <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"
          ></path>
        </svg>
      </span>
      <input
        type="email"
        id="input-group-1"
        name="email"
        class="rounded-none rounded-r-lg bg-base-100 border text-base-content focus:ring-primary focus:border-primary block flex-1 min-w-0 w-full text-sm border-base-300 p-2.5"
        placeholder="man@human.com"
        required
      />
    </div>
    <div class="email-error text-error text-xs mb-5 mt-1"></div>

    <!-- Username Input Group -->
    <label class="block mb-2 text-sm font-medium text-base-content">
      Username
    </label>
    <div class="flex">
      <span
        class="inline-flex items-center px-2 text-sm text-base-content bg-base-200 border border-r-0 border-base-300 rounded-l-md"
      >
        <svg
          class="w-5 h-5 text-neutral-content"
          fill="currentColor"
          viewBox="0 0 20 20"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            fill-rule="evenodd"
            d="M10 2a4 4 0 100 8 4 4 0 000-8zM2 18a8 8 0 0116 0H2z"
            clip-rule="evenodd"></path>
        </svg>
      </span>
      <input
        type="text"
        name="name"
        class="rounded-none rounded-r-lg bg-base-100 border text-base-content focus:ring-primary focus:border-primary block flex-1 min-w-0 w-full text-sm border-base-300 p-2.5"
        placeholder="Man"
        required
      />
    </div>
    <div class="user-error text-error text-xs mb-5 mt-1"></div>

    <!-- Password Input Group -->
    <label class="block mb-2 text-sm font-medium text-base-content">
      Password
    </label>
    <div class="relative">
      <div
        class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none"
      >
        <svg
          viewBox="0 0 24 24"
          fill="currentColor"
          xmlns="http://www.w3.org/2000/svg"
          class="w-5 h-5 text-neutral-content"
        >
          <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
          <g
            id="SVGRepo_tracerCarrier"
            stroke-linecap="round"
            stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier">
            <path
              fill-rule="evenodd"
              clip-rule="evenodd"
              d="M5.25 10.0546V8C5.25 4.27208 8.27208 1.25 12 1.25C15.7279 1.25 18.75 4.27208 18.75 8V10.0546C19.8648 10.1379 20.5907 10.348 21.1213 10.8787C22 11.7574 22 13.1716 22 16C22 18.8284 22 20.2426 21.1213 21.1213C20.2426 22 18.8284 22 16 22H8C5.17157 22 3.75736 22 2.87868 21.1213C2 20.2426 2 18.8284 2 16C2 13.1716 2 11.7574 2.87868 10.8787C3.40931 10.348 4.13525 10.1379 5.25 10.0546ZM6.75 8C6.75 5.10051 9.10051 2.75 12 2.75C14.8995 2.75 17.25 5.10051 17.25 8V10.0036C16.867 10 16.4515 10 16 10H8C7.54849 10 7.13301 10 6.75 10.0036V8ZM8 17C8.55228 17 9 16.5523 9 16C9 15.4477 8.55228 15 8 15C7.44772 15 7 15.4477 7 16C7 16.5523 7.44772 17 8 17ZM12 17C12.5523 17 13 16.5523 13 16C13 15.4477 12.5523 15 12 15C11.4477 15 11 15.4477 11 16C11 16.5523 11.4477 17 12 17ZM17 16C17 16.5523 16.5523 17 16 17C15.4477 17 15 16.5523 15 16C15 15.4477 15.4477 15 16 15C16.5523 15 17 15.4477 17 16Z"
            ></path>
          </g>
        </svg>
      </div>
      <input
        type="password"
        name="password"
        class="bg-base-100 border border-base-300 text-base-content text-sm rounded-lg focus:ring-primary focus:border-primary block w-full pl-10 p-2.5"
        placeholder="••••••••"
        required
      />
    </div>
    <div class="pw-error text-error text-xs mb-5 mt-1"></div>

    <!-- Submit Button -->
    <button
      type="submit"
      class="bg-primary text-primary-content rounded-md px-4 py-2 w-full"
    >
      Submit
    </button>
  </form>
</div>

<script>
  import { isInputError } from "astro:actions";
  import { actions } from "astro:actions";

  const form = document.querySelector("form");
  form?.addEventListener("submit", async (event) => {
    event.preventDefault();
    const formData = new FormData(form);
    const { error, data } = await actions.register(formData);
    if (!isInputError(error)) {
      // console.log("Registered successfully!");
      // console.log("Form Details:", Object.fromEntries(formData.entries()));
      if (data?.success) console.log(data.data);
      const emailErrorElement = document.querySelector(".email-error");
      if (emailErrorElement) {
        emailErrorElement.textContent = "";
      }
      const nameErrorElement = document.querySelector(".user-error");
      if (nameErrorElement) {
        nameErrorElement.textContent = "";
      }
      const passwordErrorElement = document.querySelector(".pw-error");
      if (passwordErrorElement) {
        passwordErrorElement.textContent = "";
      }
    } else {
      if (error.fields?.email) {
        const emailErrorElement = document.querySelector(".email-error");
        if (emailErrorElement) {
          emailErrorElement.textContent = error.fields.email.join(", ");
        }
      } else {
        const emailErrorElement = document.querySelector(".email-error");
        if (emailErrorElement) {
          emailErrorElement.textContent = "";
        }
      }

      if (error.fields?.name) {
        let nameErrorElement = document.querySelector(".user-error");
        if (!nameErrorElement) {
          nameErrorElement = document.createElement("p");
          const userErrorDiv = document.querySelector(".user-error");
          if (userErrorDiv) {
            userErrorDiv.appendChild(nameErrorElement);
          }
        }
        nameErrorElement.textContent = error.fields.name.join(", ");
      } else {
        const nameErrorElement = document.querySelector(".user-error");
        if (nameErrorElement) {
          nameErrorElement.textContent = "";
        }
      }

      if (error.fields?.password) {
        let passwordErrorElement = document.querySelector(".pw-error");
        if (!passwordErrorElement) {
          passwordErrorElement = document.createElement("p");
          const passwordErrorDiv = document.querySelector(".pw-error");
          if (passwordErrorDiv) {
            passwordErrorDiv.appendChild(passwordErrorElement);
          }
        }
        passwordErrorElement.textContent = error.fields.password.join(", ");
      } else {
        const passwordErrorElement = document.querySelector(".pw-error");
        if (passwordErrorElement) {
          passwordErrorElement.textContent = "";
        }
      }
    }
  });
</script>
